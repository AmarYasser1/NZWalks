2025-07-11 00:39:17.574 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 00:39:17.755 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 00:39:17.756 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 00:39:17.789 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 00:39:17.791 +03:00 [INF] Hosting environment: Development
2025-07-11 00:39:17.793 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 00:39:22.372 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7123/WeatherForecast - application/json 186
2025-07-11 00:39:22.571 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:39:22 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-11 00:39:22.603 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:39:22 PM'.
2025-07-11 00:39:22.608 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7123/WeatherForecast - 404 0 null 240.6935ms
2025-07-11 00:39:22.614 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7123/WeatherForecast, Response status code: 404
2025-07-11 00:39:29.797 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7123/v1/WeatherForecast - application/json 186
2025-07-11 00:39:29.905 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:39:29 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-11 00:39:29.907 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:39:29 PM'.
2025-07-11 00:39:29.908 +03:00 [INF] Executing endpoint 'NZWalksAPI.Controllers.WeatherForecastController.GetV1 (NZWalks.API)'
2025-07-11 00:39:29.918 +03:00 [INF] Route matched with {action = "GetV1", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[NZWalksAPI.WeatherForecast] GetV1() on controller NZWalksAPI.Controllers.WeatherForecastController (NZWalks.API).
2025-07-11 00:39:29.924 +03:00 [INF] Executing ObjectResult, writing value of type 'NZWalksAPI.WeatherForecast[]'.
2025-07-11 00:39:29.941 +03:00 [INF] Executed action NZWalksAPI.Controllers.WeatherForecastController.GetV1 (NZWalks.API) in 18.335ms
2025-07-11 00:39:29.943 +03:00 [INF] Executed endpoint 'NZWalksAPI.Controllers.WeatherForecastController.GetV1 (NZWalks.API)'
2025-07-11 00:39:29.944 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7123/v1/WeatherForecast - 200 null application/json; charset=utf-8 146.837ms
2025-07-11 00:39:36.191 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7123/v2/WeatherForecast - application/json 186
2025-07-11 00:39:36.253 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:39:36 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-11 00:39:36.259 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:39:36 PM'.
2025-07-11 00:39:36.259 +03:00 [INF] Executing endpoint 'NZWalksAPI.Controllers.WeatherForecastController.GetV2 (NZWalks.API)'
2025-07-11 00:39:36.261 +03:00 [INF] Route matched with {action = "GetV2", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[NZWalksAPI.WeatherForecast] GetV2() on controller NZWalksAPI.Controllers.WeatherForecastController (NZWalks.API).
2025-07-11 00:39:36.263 +03:00 [INF] Executing ObjectResult, writing value of type 'NZWalksAPI.WeatherForecast[]'.
2025-07-11 00:39:36.264 +03:00 [INF] Executed action NZWalksAPI.Controllers.WeatherForecastController.GetV2 (NZWalks.API) in 1.5737ms
2025-07-11 00:39:36.267 +03:00 [INF] Executed endpoint 'NZWalksAPI.Controllers.WeatherForecastController.GetV2 (NZWalks.API)'
2025-07-11 00:39:36.269 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7123/v2/WeatherForecast - 200 null application/json; charset=utf-8 78.8108ms
2025-07-11 00:40:38.871 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 00:40:39.098 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 00:40:39.100 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 00:40:39.140 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 00:40:39.142 +03:00 [INF] Hosting environment: Development
2025-07-11 00:40:39.143 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 00:40:42.420 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7123/v2/WeatherForecast - application/json 186
2025-07-11 00:40:42.456 +03:00 [INF] Multiple candidate actions were found, but none matched the requested service API version '2'. Candidate actions: NZWalksAPI.Controllers.WeatherForecastController.GetV1 (NZWalks.API)
NZWalksAPI.Controllers.WeatherForecastController.GetV2 (NZWalks.API)
2025-07-11 00:40:42.639 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:40:42 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-11 00:40:42.672 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:40:42 PM'.
2025-07-11 00:40:42.675 +03:00 [INF] Executing endpoint 'Microsoft.AspNetCore.Http.Endpoint'
2025-07-11 00:40:42.680 +03:00 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType0`1[[<>f__AnonymousType1`3[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], Microsoft.AspNetCore.Mvc.Versioning, Version=5.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]], Microsoft.AspNetCore.Mvc.Versioning, Version=5.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]'.
2025-07-11 00:40:42.687 +03:00 [INF] Executed endpoint 'Microsoft.AspNetCore.Http.Endpoint'
2025-07-11 00:40:42.690 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7123/v2/WeatherForecast - 400 null application/json; charset=utf-8 272.5747ms
2025-07-11 00:40:47.069 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7123/v1/WeatherForecast - application/json 186
2025-07-11 00:40:47.123 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Routing.Matching.AmbiguousMatchException: The request matched multiple endpoints. Matches: 

NZWalksAPI.Controllers.WeatherForecastController.GetV1 (NZWalks.API)
NZWalksAPI.Controllers.WeatherForecastController.GetV2 (NZWalks.API)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ReportAmbiguity(Span`1 candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ProcessFinalCandidates(HttpContext httpContext, Span`1 candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.Select(HttpContext httpContext, Span`1 candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.SelectAsync(HttpContext httpContext, CandidateSet candidateSet)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcher.SelectEndpointWithPoliciesAsync(HttpContext httpContext, IEndpointSelectorPolicy[] policies, CandidateSet candidateSet)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.<Invoke>g__AwaitMatch|10_1(EndpointRoutingMiddleware middleware, HttpContext httpContext, Task matchTask)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-07-11 00:40:47.130 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7123/v1/WeatherForecast - 500 null text/plain; charset=utf-8 60.4916ms
2025-07-11 00:41:29.000 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 00:41:29.221 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 00:41:29.224 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 00:41:29.292 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 00:41:29.295 +03:00 [INF] Hosting environment: Development
2025-07-11 00:41:29.297 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 00:41:39.778 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7123/v1/WeatherForecast - application/json 186
2025-07-11 00:41:39.979 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:41:39 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-11 00:41:40.016 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:41:39 PM'.
2025-07-11 00:41:40.020 +03:00 [INF] Executing endpoint 'NZWalksAPI.Controllers.WeatherForecastController.GetV1 (NZWalks.API)'
2025-07-11 00:41:40.028 +03:00 [INF] Route matched with {action = "GetV1", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[NZWalksAPI.WeatherForecast] GetV1() on controller NZWalksAPI.Controllers.WeatherForecastController (NZWalks.API).
2025-07-11 00:41:40.035 +03:00 [INF] Executing ObjectResult, writing value of type 'NZWalksAPI.WeatherForecast[]'.
2025-07-11 00:41:40.052 +03:00 [INF] Executed action NZWalksAPI.Controllers.WeatherForecastController.GetV1 (NZWalks.API) in 20.3006ms
2025-07-11 00:41:40.057 +03:00 [INF] Executed endpoint 'NZWalksAPI.Controllers.WeatherForecastController.GetV1 (NZWalks.API)'
2025-07-11 00:41:40.059 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7123/v1/WeatherForecast - 200 null application/json; charset=utf-8 285.3896ms
2025-07-11 00:41:47.298 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7123/v2/WeatherForecast - application/json 186
2025-07-11 00:41:47.308 +03:00 [INF] Multiple candidate actions were found, but none matched the requested service API version '2'. Candidate actions: NZWalksAPI.Controllers.WeatherForecastController.GetV1 (NZWalks.API)
NZWalksAPI.Controllers.WeatherForecastController.GetV2 (NZWalks.API)
2025-07-11 00:41:47.398 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:41:47 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-11 00:41:47.404 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:41:47 PM'.
2025-07-11 00:41:47.406 +03:00 [INF] Executing endpoint 'Microsoft.AspNetCore.Http.Endpoint'
2025-07-11 00:41:47.409 +03:00 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType0`1[[<>f__AnonymousType1`3[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], Microsoft.AspNetCore.Mvc.Versioning, Version=5.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]], Microsoft.AspNetCore.Mvc.Versioning, Version=5.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]'.
2025-07-11 00:41:47.412 +03:00 [INF] Executed endpoint 'Microsoft.AspNetCore.Http.Endpoint'
2025-07-11 00:41:47.413 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7123/v2/WeatherForecast - 400 null application/json; charset=utf-8 114.4893ms
2025-07-11 00:42:06.718 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 00:42:06.968 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 00:42:06.971 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 00:42:07.014 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 00:42:07.017 +03:00 [INF] Hosting environment: Development
2025-07-11 00:42:07.018 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 00:42:10.065 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7123/v2/WeatherForecast - application/json 186
2025-07-11 00:42:10.100 +03:00 [INF] Multiple candidate actions were found, but none matched the requested service API version '2'. Candidate actions: NZWalksAPI.Controllers.WeatherForecastController.GetV1 (NZWalks.API)
NZWalksAPI.Controllers.WeatherForecastController.GetV2 (NZWalks.API)
2025-07-11 00:42:10.286 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:42:10 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-11 00:42:10.318 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:42:10 PM'.
2025-07-11 00:42:10.320 +03:00 [INF] Executing endpoint 'Microsoft.AspNetCore.Http.Endpoint'
2025-07-11 00:42:10.324 +03:00 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType0`1[[<>f__AnonymousType1`3[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], Microsoft.AspNetCore.Mvc.Versioning, Version=5.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]], Microsoft.AspNetCore.Mvc.Versioning, Version=5.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]'.
2025-07-11 00:42:10.333 +03:00 [INF] Executed endpoint 'Microsoft.AspNetCore.Http.Endpoint'
2025-07-11 00:42:10.334 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7123/v2/WeatherForecast - 400 null application/json; charset=utf-8 272.7527ms
2025-07-11 00:42:17.529 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7123/v1/WeatherForecast - application/json 186
2025-07-11 00:42:17.647 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:42:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-11 00:42:17.650 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:42:17 PM'.
2025-07-11 00:42:17.651 +03:00 [INF] Executing endpoint 'NZWalksAPI.Controllers.WeatherForecastController.GetV1 (NZWalks.API)'
2025-07-11 00:42:17.663 +03:00 [INF] Route matched with {action = "GetV1", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[NZWalksAPI.WeatherForecast] GetV1() on controller NZWalksAPI.Controllers.WeatherForecastController (NZWalks.API).
2025-07-11 00:42:17.668 +03:00 [INF] Executing ObjectResult, writing value of type 'NZWalksAPI.WeatherForecast[]'.
2025-07-11 00:42:17.682 +03:00 [INF] Executed action NZWalksAPI.Controllers.WeatherForecastController.GetV1 (NZWalks.API) in 14.3041ms
2025-07-11 00:42:17.684 +03:00 [INF] Executed endpoint 'NZWalksAPI.Controllers.WeatherForecastController.GetV1 (NZWalks.API)'
2025-07-11 00:42:17.686 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7123/v1/WeatherForecast - 200 null application/json; charset=utf-8 157.1494ms
2025-07-11 00:42:26.008 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7123/v2/WeatherForecast - application/json 186
2025-07-11 00:42:26.011 +03:00 [INF] Multiple candidate actions were found, but none matched the requested service API version '2'. Candidate actions: NZWalksAPI.Controllers.WeatherForecastController.GetV1 (NZWalks.API)
NZWalksAPI.Controllers.WeatherForecastController.GetV2 (NZWalks.API)
2025-07-11 00:42:26.058 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:42:26 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-11 00:42:26.063 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:42:26 PM'.
2025-07-11 00:42:26.064 +03:00 [INF] Executing endpoint 'Microsoft.AspNetCore.Http.Endpoint'
2025-07-11 00:42:26.065 +03:00 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType0`1[[<>f__AnonymousType1`3[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], Microsoft.AspNetCore.Mvc.Versioning, Version=5.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]], Microsoft.AspNetCore.Mvc.Versioning, Version=5.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]'.
2025-07-11 00:42:26.067 +03:00 [INF] Executed endpoint 'Microsoft.AspNetCore.Http.Endpoint'
2025-07-11 00:42:26.068 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7123/v2/WeatherForecast - 400 null application/json; charset=utf-8 60.097ms
2025-07-11 00:43:38.345 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 00:43:38.564 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 00:43:38.566 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 00:43:38.623 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 00:43:38.624 +03:00 [INF] Hosting environment: Development
2025-07-11 00:43:38.625 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 00:43:41.698 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7123/v2/WeatherForecast - application/json 186
2025-07-11 00:43:41.908 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:43:41 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-11 00:43:41.940 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:43:41 PM'.
2025-07-11 00:43:41.943 +03:00 [INF] Executing endpoint 'NZWalksAPI.Controllers.WeatherForecastController.GetV2 (NZWalks.API)'
2025-07-11 00:43:41.952 +03:00 [INF] Route matched with {action = "GetV2", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[NZWalksAPI.WeatherForecast] GetV2() on controller NZWalksAPI.Controllers.WeatherForecastController (NZWalks.API).
2025-07-11 00:43:41.958 +03:00 [INF] Executing ObjectResult, writing value of type 'NZWalksAPI.WeatherForecast[]'.
2025-07-11 00:43:41.978 +03:00 [INF] Executed action NZWalksAPI.Controllers.WeatherForecastController.GetV2 (NZWalks.API) in 21.5843ms
2025-07-11 00:43:41.982 +03:00 [INF] Executed endpoint 'NZWalksAPI.Controllers.WeatherForecastController.GetV2 (NZWalks.API)'
2025-07-11 00:43:41.984 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7123/v2/WeatherForecast - 200 null application/json; charset=utf-8 290.2321ms
2025-07-11 00:43:46.362 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7123/v1/WeatherForecast - application/json 186
2025-07-11 00:43:46.533 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:43:46 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-11 00:43:46.538 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:43:46 PM'.
2025-07-11 00:43:46.541 +03:00 [INF] Executing endpoint 'NZWalksAPI.Controllers.WeatherForecastController.GetV1 (NZWalks.API)'
2025-07-11 00:43:46.545 +03:00 [INF] Route matched with {action = "GetV1", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[NZWalksAPI.WeatherForecast] GetV1() on controller NZWalksAPI.Controllers.WeatherForecastController (NZWalks.API).
2025-07-11 00:43:46.549 +03:00 [INF] Executing ObjectResult, writing value of type 'NZWalksAPI.WeatherForecast[]'.
2025-07-11 00:43:46.551 +03:00 [INF] Executed action NZWalksAPI.Controllers.WeatherForecastController.GetV1 (NZWalks.API) in 2.3016ms
2025-07-11 00:43:46.552 +03:00 [INF] Executed endpoint 'NZWalksAPI.Controllers.WeatherForecastController.GetV1 (NZWalks.API)'
2025-07-11 00:43:46.553 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7123/v1/WeatherForecast - 200 null application/json; charset=utf-8 191.5406ms
2025-07-11 00:49:52.259 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 00:49:52.468 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 00:49:52.470 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 00:49:52.509 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 00:49:52.510 +03:00 [INF] Hosting environment: Development
2025-07-11 00:49:52.512 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 00:50:53.362 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 00:50:53.573 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 00:50:53.577 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 00:50:53.644 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 00:50:53.646 +03:00 [INF] Hosting environment: Development
2025-07-11 00:50:53.647 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 00:50:59.419 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7123/v1/WeatherForecast - application/json 186
2025-07-11 00:50:59.716 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:50:59 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-11 00:50:59.754 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:50:59 PM'.
2025-07-11 00:50:59.761 +03:00 [INF] Executing endpoint 'NZWalks.API.Versioning.WeatherForecastV1Controller.Get (NZWalks.API)'
2025-07-11 00:50:59.776 +03:00 [INF] Route matched with {action = "Get", controller = "WeatherForecastV"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[NZWalksAPI.WeatherForecast] Get() on controller NZWalks.API.Versioning.WeatherForecastV1Controller (NZWalks.API).
2025-07-11 00:50:59.785 +03:00 [INF] Executing ObjectResult, writing value of type 'NZWalksAPI.WeatherForecast[]'.
2025-07-11 00:50:59.808 +03:00 [INF] Executed action NZWalks.API.Versioning.WeatherForecastV1Controller.Get (NZWalks.API) in 25.3096ms
2025-07-11 00:50:59.814 +03:00 [INF] Executed endpoint 'NZWalks.API.Versioning.WeatherForecastV1Controller.Get (NZWalks.API)'
2025-07-11 00:50:59.817 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7123/v1/WeatherForecast - 200 null application/json; charset=utf-8 404.4747ms
2025-07-11 00:51:06.765 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7123/v2/WeatherForecast - application/json 186
2025-07-11 00:51:06.968 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:51:06 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-11 00:51:06.974 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:51:06 PM'.
2025-07-11 00:51:06.976 +03:00 [INF] Executing endpoint 'NZWalks.API.Versioning.WeatherForecastV2Controller.Get (NZWalks.API)'
2025-07-11 00:51:06.978 +03:00 [INF] Route matched with {action = "Get", controller = "WeatherForecastV"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[NZWalksAPI.WeatherForecast] Get() on controller NZWalks.API.Versioning.WeatherForecastV2Controller (NZWalks.API).
2025-07-11 00:51:06.982 +03:00 [INF] Executing ObjectResult, writing value of type 'NZWalksAPI.WeatherForecast[]'.
2025-07-11 00:51:06.984 +03:00 [INF] Executed action NZWalks.API.Versioning.WeatherForecastV2Controller.Get (NZWalks.API) in 4.3258ms
2025-07-11 00:51:06.985 +03:00 [INF] Executed endpoint 'NZWalks.API.Versioning.WeatherForecastV2Controller.Get (NZWalks.API)'
2025-07-11 00:51:06.986 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7123/v2/WeatherForecast - 200 null application/json; charset=utf-8 221.0827ms
2025-07-11 00:51:09.260 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7123/v2/WeatherForecast - application/json 186
2025-07-11 00:51:09.324 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:51:09 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-11 00:51:09.332 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:51:09 PM'.
2025-07-11 00:51:09.335 +03:00 [INF] Executing endpoint 'NZWalks.API.Versioning.WeatherForecastV2Controller.Get (NZWalks.API)'
2025-07-11 00:51:09.336 +03:00 [INF] Route matched with {action = "Get", controller = "WeatherForecastV"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[NZWalksAPI.WeatherForecast] Get() on controller NZWalks.API.Versioning.WeatherForecastV2Controller (NZWalks.API).
2025-07-11 00:51:09.338 +03:00 [INF] Executing ObjectResult, writing value of type 'NZWalksAPI.WeatherForecast[]'.
2025-07-11 00:51:09.339 +03:00 [INF] Executed action NZWalks.API.Versioning.WeatherForecastV2Controller.Get (NZWalks.API) in 1.0857ms
2025-07-11 00:51:09.339 +03:00 [INF] Executed endpoint 'NZWalks.API.Versioning.WeatherForecastV2Controller.Get (NZWalks.API)'
2025-07-11 00:51:09.340 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7123/v2/WeatherForecast - 200 null application/json; charset=utf-8 80.4547ms
2025-07-11 00:51:14.295 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7123/v1/WeatherForecast - application/json 186
2025-07-11 00:51:14.338 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:51:14 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-11 00:51:14.341 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 9:51:14 PM'.
2025-07-11 00:51:14.342 +03:00 [INF] Executing endpoint 'NZWalks.API.Versioning.WeatherForecastV1Controller.Get (NZWalks.API)'
2025-07-11 00:51:14.343 +03:00 [INF] Route matched with {action = "Get", controller = "WeatherForecastV"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[NZWalksAPI.WeatherForecast] Get() on controller NZWalks.API.Versioning.WeatherForecastV1Controller (NZWalks.API).
2025-07-11 00:51:14.345 +03:00 [INF] Executing ObjectResult, writing value of type 'NZWalksAPI.WeatherForecast[]'.
2025-07-11 00:51:14.347 +03:00 [INF] Executed action NZWalks.API.Versioning.WeatherForecastV1Controller.Get (NZWalks.API) in 2.1536ms
2025-07-11 00:51:14.348 +03:00 [INF] Executed endpoint 'NZWalks.API.Versioning.WeatherForecastV1Controller.Get (NZWalks.API)'
2025-07-11 00:51:14.349 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7123/v1/WeatherForecast - 200 null application/json; charset=utf-8 54.2535ms
2025-07-11 01:02:06.842 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 01:02:07.018 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 01:02:07.023 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 01:02:07.062 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 01:02:07.065 +03:00 [INF] Hosting environment: Development
2025-07-11 01:02:07.067 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 01:02:10.411 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - null null
2025-07-11 01:02:10.411 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_vs/browserLink - null null
2025-07-11 01:02:10.453 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - 200 16506 application/javascript; charset=utf-8 45.152ms
2025-07-11 01:02:10.471 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_vs/browserLink - 200 null text/javascript; charset=UTF-8 63.4837ms
2025-07-11 01:02:10.506 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - null null
2025-07-11 01:02:10.686 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Conflicting method/path combination "GET v{version}/WeatherForecast" for actions - NZWalks.API.Versioning.WeatherForecastV1Controller.Get (NZWalks.API), NZWalks.API.Versioning.WeatherForecastV2Controller.Get (NZWalks.API). Actions require a unique method/path combination for Swagger/OpenAPI 2.0 and 3.0. Use ConflictingActionsResolver as a workaround or provide your own implementation of PathGroupSelector.
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.PrepareGenerateOperation(IGrouping`2 group)
   at System.Linq.Enumerable.IteratorSelectIterator`2.MoveNext()
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperationsAsync(OpenApiDocument document, IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePathsAsync(OpenApiDocument document, IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository, Func`4 operationsGenerator)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePathsAsync(OpenApiDocument document, IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-07-11 01:02:10.716 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - 500 null text/plain; charset=utf-8 209.6826ms
2025-07-11 01:04:59.093 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 01:04:59.283 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 01:04:59.286 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 01:04:59.325 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 01:04:59.327 +03:00 [INF] Hosting environment: Development
2025-07-11 01:04:59.329 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 01:05:08.188 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7123/api/Walks - application/json 186
2025-07-11 01:05:08.501 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 10:05:08 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-11 01:05:08.542 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 10:05:08 PM'.
2025-07-11 01:05:08.548 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7123/api/Walks - 404 0 null 367.6909ms
2025-07-11 01:05:08.554 +03:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7123/api/Walks, Response status code: 404
2025-07-11 01:05:15.930 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7123/api/v1/Walks - application/json 186
2025-07-11 01:05:16.058 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 10:05:15 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-11 01:05:16.063 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 10:05:15 PM'.
2025-07-11 01:05:16.067 +03:00 [INF] Executing endpoint 'NZWalks.API.Controllers.V1.WalksController.GetAll (NZWalks.API)'
2025-07-11 01:05:16.089 +03:00 [INF] Route matched with {action = "GetAll", controller = "Walks"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll(NZWalks.API.Models.Domain.WalkQueryParameters) on controller NZWalks.API.Controllers.V1.WalksController (NZWalks.API).
2025-07-11 01:05:17.388 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-07-11 01:05:17.392 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-07-11 01:05:17.969 +03:00 [INF] Executed DbCommand (56ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [w0].[Id], [w0].[Description], [w0].[DifficultyId], [w0].[LengthInKm], [w0].[Name], [w0].[RegionId], [w0].[WalkImageUrl], [d].[Id], [d].[Name], [r].[Id], [r].[Code], [r].[Name], [r].[RegionImageUrl]
FROM (
    SELECT [w].[Id], [w].[Description], [w].[DifficultyId], [w].[LengthInKm], [w].[Name], [w].[RegionId], [w].[WalkImageUrl]
    FROM [Walks] AS [w]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [w0]
INNER JOIN [Difficulties] AS [d] ON [w0].[DifficultyId] = [d].[Id]
INNER JOIN [Regions] AS [r] ON [w0].[RegionId] = [r].[Id]
2025-07-11 01:05:18.109 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[NZWalks.API.Models.DTOs.WalkDto, NZWalks.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-11 01:05:18.150 +03:00 [INF] Executed action NZWalks.API.Controllers.V1.WalksController.GetAll (NZWalks.API) in 2050.8829ms
2025-07-11 01:05:18.155 +03:00 [INF] Executed endpoint 'NZWalks.API.Controllers.V1.WalksController.GetAll (NZWalks.API)'
2025-07-11 01:05:18.167 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7123/api/v1/Walks - 200 null application/json; charset=utf-8 2237.0248ms
2025-07-11 01:05:47.895 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7123/api/v2/Walks - application/json 186
2025-07-11 01:05:47.903 +03:00 [INF] Multiple candidate actions were found, but none matched the requested service API version '2'. Candidate actions: NZWalks.API.Controllers.V1.WalksController.GetAll (NZWalks.API)
2025-07-11 01:05:47.948 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 10:05:47 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-11 01:05:47.950 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 10:05:47 PM'.
2025-07-11 01:05:47.951 +03:00 [INF] Executing endpoint 'Microsoft.AspNetCore.Http.Endpoint'
2025-07-11 01:05:47.955 +03:00 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType0`1[[<>f__AnonymousType1`3[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], Microsoft.AspNetCore.Mvc.Versioning, Version=5.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]], Microsoft.AspNetCore.Mvc.Versioning, Version=5.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]'.
2025-07-11 01:05:47.959 +03:00 [INF] Executed endpoint 'Microsoft.AspNetCore.Http.Endpoint'
2025-07-11 01:05:47.960 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7123/api/v2/Walks - 400 null application/json; charset=utf-8 65.3634ms
2025-07-11 01:05:53.176 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7123/api/v1/Walks - application/json 186
2025-07-11 01:05:53.243 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 10:05:53 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-11 01:05:53.249 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 10:05:53 PM'.
2025-07-11 01:05:53.252 +03:00 [INF] Executing endpoint 'NZWalks.API.Controllers.V1.WalksController.GetAll (NZWalks.API)'
2025-07-11 01:05:53.255 +03:00 [INF] Route matched with {action = "GetAll", controller = "Walks"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll(NZWalks.API.Models.Domain.WalkQueryParameters) on controller NZWalks.API.Controllers.V1.WalksController (NZWalks.API).
2025-07-11 01:05:53.425 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [w0].[Id], [w0].[Description], [w0].[DifficultyId], [w0].[LengthInKm], [w0].[Name], [w0].[RegionId], [w0].[WalkImageUrl], [d].[Id], [d].[Name], [r].[Id], [r].[Code], [r].[Name], [r].[RegionImageUrl]
FROM (
    SELECT [w].[Id], [w].[Description], [w].[DifficultyId], [w].[LengthInKm], [w].[Name], [w].[RegionId], [w].[WalkImageUrl]
    FROM [Walks] AS [w]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [w0]
INNER JOIN [Difficulties] AS [d] ON [w0].[DifficultyId] = [d].[Id]
INNER JOIN [Regions] AS [r] ON [w0].[RegionId] = [r].[Id]
2025-07-11 01:05:53.434 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[NZWalks.API.Models.DTOs.WalkDto, NZWalks.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-11 01:05:53.435 +03:00 [INF] Executed action NZWalks.API.Controllers.V1.WalksController.GetAll (NZWalks.API) in 178.3823ms
2025-07-11 01:05:53.437 +03:00 [INF] Executed endpoint 'NZWalks.API.Controllers.V1.WalksController.GetAll (NZWalks.API)'
2025-07-11 01:05:53.438 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7123/api/v1/Walks - 200 null application/json; charset=utf-8 261.9808ms
2025-07-11 01:24:07.005 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 01:24:07.175 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 01:24:07.180 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 01:24:07.215 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 01:24:07.216 +03:00 [INF] Hosting environment: Development
2025-07-11 01:24:07.219 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 01:24:13.462 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - null null
2025-07-11 01:24:13.462 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_vs/browserLink - null null
2025-07-11 01:24:13.491 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - 200 16506 application/javascript; charset=utf-8 32.7246ms
2025-07-11 01:24:13.561 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_vs/browserLink - 200 null text/javascript; charset=UTF-8 103.1877ms
2025-07-11 01:24:13.711 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - null null
2025-07-11 01:24:13.887 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 176.1557ms
2025-07-11 01:24:24.155 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/api/v1/Walks - null null
2025-07-11 01:24:24.246 +03:00 [INF] Executing endpoint 'NZWalks.API.Controllers.V1.WalksController.GetAll (NZWalks.API)'
2025-07-11 01:24:24.267 +03:00 [INF] Route matched with {action = "GetAll", controller = "Walks"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll(NZWalks.API.Models.Domain.WalkQueryParameters) on controller NZWalks.API.Controllers.V1.WalksController (NZWalks.API).
2025-07-11 01:24:25.527 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-07-11 01:24:25.530 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-07-11 01:24:26.101 +03:00 [INF] Executed DbCommand (54ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [w0].[Id], [w0].[Description], [w0].[DifficultyId], [w0].[LengthInKm], [w0].[Name], [w0].[RegionId], [w0].[WalkImageUrl], [d].[Id], [d].[Name], [r].[Id], [r].[Code], [r].[Name], [r].[RegionImageUrl]
FROM (
    SELECT [w].[Id], [w].[Description], [w].[DifficultyId], [w].[LengthInKm], [w].[Name], [w].[RegionId], [w].[WalkImageUrl]
    FROM [Walks] AS [w]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [w0]
INNER JOIN [Difficulties] AS [d] ON [w0].[DifficultyId] = [d].[Id]
INNER JOIN [Regions] AS [r] ON [w0].[RegionId] = [r].[Id]
2025-07-11 01:24:26.252 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[NZWalks.API.Models.DTOs.WalkDto, NZWalks.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-11 01:24:26.283 +03:00 [INF] Executed action NZWalks.API.Controllers.V1.WalksController.GetAll (NZWalks.API) in 2008.6772ms
2025-07-11 01:24:26.287 +03:00 [INF] Executed endpoint 'NZWalks.API.Controllers.V1.WalksController.GetAll (NZWalks.API)'
2025-07-11 01:24:26.294 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/api/v1/Walks - 200 null application/json; charset=utf-8 2139.1646ms
2025-07-11 01:37:04.658 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 01:37:04.851 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 01:37:04.853 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 01:37:04.896 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 01:37:04.897 +03:00 [INF] Hosting environment: Development
2025-07-11 01:37:04.898 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 01:37:09.299 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_vs/browserLink - null null
2025-07-11 01:37:09.299 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - null null
2025-07-11 01:37:09.372 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - 200 16506 application/javascript; charset=utf-8 75.9288ms
2025-07-11 01:37:09.387 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_vs/browserLink - 200 null text/javascript; charset=UTF-8 91.839ms
2025-07-11 01:37:09.441 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - null null
2025-07-11 01:37:09.499 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: An item with the same key has already been added. Key: v1
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenOptionsExtensions.SwaggerDoc(SwaggerGenOptions swaggerGenOptions, String name, OpenApiInfo info)
   at NZWalks.API.Configurations.SwaggerOptionsConfiguration.Configure(SwaggerGenOptions options) in D:\Projects (.NET)\NZWalks\NZWalksAPI\Configurations\SwaggerOptionsConfiguration.cs:line 26
   at NZWalks.API.Configurations.SwaggerOptionsConfiguration.Configure(String name, SwaggerGenOptions options) in D:\Projects (.NET)\NZWalks\NZWalksAPI\Configurations\SwaggerOptionsConfiguration.cs:line 19
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Swashbuckle.AspNetCore.SwaggerGen.ConfigureSwaggerGeneratorOptions..ctor(IOptions`1 swaggerGenOptionsAccessor, IServiceProvider serviceProvider, IWebHostEnvironment hostingEnv)
   at InvokeStub_ConfigureSwaggerGeneratorOptions..ctor(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_3(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_1(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method1(Closure, Object, HttpContext, IServiceProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-07-11 01:37:09.516 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - 500 null text/plain; charset=utf-8 75.4238ms
2025-07-11 01:37:40.232 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 01:37:40.433 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 01:37:40.439 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 01:37:40.506 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 01:37:40.507 +03:00 [INF] Hosting environment: Development
2025-07-11 01:37:40.509 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 01:37:42.621 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_vs/browserLink - null null
2025-07-11 01:37:42.621 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - null null
2025-07-11 01:37:42.677 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - 200 16506 application/javascript; charset=utf-8 60.3701ms
2025-07-11 01:37:42.689 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_vs/browserLink - 200 null text/javascript; charset=UTF-8 72.1159ms
2025-07-11 01:37:42.829 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - null null
2025-07-11 01:37:42.880 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: An item with the same key has already been added. Key: v1
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenOptionsExtensions.SwaggerDoc(SwaggerGenOptions swaggerGenOptions, String name, OpenApiInfo info)
   at NZWalks.API.Configurations.SwaggerOptionsConfiguration.Configure(SwaggerGenOptions options) in D:\Projects (.NET)\NZWalks\NZWalksAPI\Configurations\SwaggerOptionsConfiguration.cs:line 26
   at NZWalks.API.Configurations.SwaggerOptionsConfiguration.Configure(String name, SwaggerGenOptions options) in D:\Projects (.NET)\NZWalks\NZWalksAPI\Configurations\SwaggerOptionsConfiguration.cs:line 19
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Swashbuckle.AspNetCore.SwaggerGen.ConfigureSwaggerGeneratorOptions..ctor(IOptions`1 swaggerGenOptionsAccessor, IServiceProvider serviceProvider, IWebHostEnvironment hostingEnv)
   at InvokeStub_ConfigureSwaggerGeneratorOptions..ctor(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_3(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_1(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method1(Closure, Object, HttpContext, IServiceProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-07-11 01:37:42.894 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - 500 null text/plain; charset=utf-8 64.6857ms
2025-07-11 01:40:17.322 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 01:40:17.529 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 01:40:17.534 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 01:40:17.571 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 01:40:17.572 +03:00 [INF] Hosting environment: Development
2025-07-11 01:40:17.574 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 01:40:23.553 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_vs/browserLink - null null
2025-07-11 01:40:23.553 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - null null
2025-07-11 01:40:23.579 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - 200 16506 application/javascript; charset=utf-8 29.7655ms
2025-07-11 01:40:23.598 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_vs/browserLink - 200 null text/javascript; charset=UTF-8 49.6221ms
2025-07-11 01:40:23.626 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - null null
2025-07-11 01:40:23.674 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: An item with the same key has already been added. Key: v1
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenOptionsExtensions.SwaggerDoc(SwaggerGenOptions swaggerGenOptions, String name, OpenApiInfo info)
   at NZWalks.API.Extensions.ApplicationServiceCollectionExtensions.<>c.<AddSwaggerGenConfiguration>b__4_0(SwaggerGenOptions options) in D:\Projects (.NET)\NZWalks\NZWalksAPI\Extensions\ApplicationServiceCollectionExtensions.cs:line 88
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Swashbuckle.AspNetCore.SwaggerGen.ConfigureSwaggerGeneratorOptions..ctor(IOptions`1 swaggerGenOptionsAccessor, IServiceProvider serviceProvider, IWebHostEnvironment hostingEnv)
   at InvokeStub_ConfigureSwaggerGeneratorOptions..ctor(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_3(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_1(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method1(Closure, Object, HttpContext, IServiceProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-07-11 01:40:23.692 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - 500 null text/plain; charset=utf-8 66.3449ms
2025-07-11 01:41:08.264 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - null null
2025-07-11 01:41:08.268 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_vs/browserLink - null null
2025-07-11 01:41:08.270 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - 200 16506 application/javascript; charset=utf-8 6.5597ms
2025-07-11 01:41:08.327 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_vs/browserLink - 200 null text/javascript; charset=UTF-8 58.4808ms
2025-07-11 01:41:08.378 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - null null
2025-07-11 01:41:08.407 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: An item with the same key has already been added. Key: v1
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenOptionsExtensions.SwaggerDoc(SwaggerGenOptions swaggerGenOptions, String name, OpenApiInfo info)
   at NZWalks.API.Extensions.ApplicationServiceCollectionExtensions.<>c.<AddSwaggerGenConfiguration>b__4_0(SwaggerGenOptions options) in D:\Projects (.NET)\NZWalks\NZWalksAPI\Extensions\ApplicationServiceCollectionExtensions.cs:line 88
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Swashbuckle.AspNetCore.SwaggerGen.ConfigureSwaggerGeneratorOptions..ctor(IOptions`1 swaggerGenOptionsAccessor, IServiceProvider serviceProvider, IWebHostEnvironment hostingEnv)
   at InvokeStub_ConfigureSwaggerGeneratorOptions..ctor(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_3(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_1(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method1(Closure, Object, HttpContext, IServiceProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-07-11 01:41:08.417 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - 500 null text/plain; charset=utf-8 39.4818ms
2025-07-11 01:43:42.458 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 01:43:42.715 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 01:43:42.719 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 01:43:42.760 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 01:43:42.761 +03:00 [INF] Hosting environment: Development
2025-07-11 01:43:42.764 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 01:43:45.453 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - null null
2025-07-11 01:43:45.453 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_vs/browserLink - null null
2025-07-11 01:43:45.477 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - 200 16506 application/javascript; charset=utf-8 27.3789ms
2025-07-11 01:43:45.502 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_vs/browserLink - 200 null text/javascript; charset=UTF-8 53.1415ms
2025-07-11 01:43:45.580 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - null null
2025-07-11 01:43:45.635 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: An item with the same key has already been added. Key: v1
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenOptionsExtensions.SwaggerDoc(SwaggerGenOptions swaggerGenOptions, String name, OpenApiInfo info)
   at NZWalks.API.Extensions.ApplicationServiceCollectionExtensions.<>c.<AddSwaggerGenConfiguration>b__4_0(SwaggerGenOptions options) in D:\Projects (.NET)\NZWalks\NZWalksAPI\Extensions\ApplicationServiceCollectionExtensions.cs:line 88
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Swashbuckle.AspNetCore.SwaggerGen.ConfigureSwaggerGeneratorOptions..ctor(IOptions`1 swaggerGenOptionsAccessor, IServiceProvider serviceProvider, IWebHostEnvironment hostingEnv)
   at InvokeStub_ConfigureSwaggerGeneratorOptions..ctor(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_3(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_1(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method1(Closure, Object, HttpContext, IServiceProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-07-11 01:43:45.652 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - 500 null text/plain; charset=utf-8 72.2629ms
2025-07-11 01:45:05.809 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 01:45:06.070 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 01:45:06.073 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 01:45:06.171 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 01:45:06.172 +03:00 [INF] Hosting environment: Development
2025-07-11 01:45:06.172 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 01:45:17.689 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - null null
2025-07-11 01:45:17.689 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_vs/browserLink - null null
2025-07-11 01:45:17.767 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - 200 16506 application/javascript; charset=utf-8 80.621ms
2025-07-11 01:45:17.799 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_vs/browserLink - 200 null text/javascript; charset=UTF-8 114.133ms
2025-07-11 01:45:17.830 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - null null
2025-07-11 01:45:17.887 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: An item with the same key has already been added. Key: v1
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenOptionsExtensions.SwaggerDoc(SwaggerGenOptions swaggerGenOptions, String name, OpenApiInfo info)
   at NZWalks.API.Configurations.SwaggerOptionsConfiguration.Configure(SwaggerGenOptions options) in D:\Projects (.NET)\NZWalks\NZWalksAPI\Configurations\SwaggerOptionsConfiguration.cs:line 26
   at NZWalks.API.Configurations.SwaggerOptionsConfiguration.Configure(String name, SwaggerGenOptions options) in D:\Projects (.NET)\NZWalks\NZWalksAPI\Configurations\SwaggerOptionsConfiguration.cs:line 19
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Swashbuckle.AspNetCore.SwaggerGen.ConfigureSwaggerGeneratorOptions..ctor(IOptions`1 swaggerGenOptionsAccessor, IServiceProvider serviceProvider, IWebHostEnvironment hostingEnv)
   at InvokeStub_ConfigureSwaggerGeneratorOptions..ctor(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_3(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_1(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method1(Closure, Object, HttpContext, IServiceProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-07-11 01:45:17.904 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - 500 null text/plain; charset=utf-8 73.7901ms
2025-07-11 01:45:36.549 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 01:45:36.786 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 01:45:36.790 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 01:45:36.826 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 01:45:36.829 +03:00 [INF] Hosting environment: Development
2025-07-11 01:45:36.830 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 01:45:40.759 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - null null
2025-07-11 01:45:40.778 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - 200 16506 application/javascript; charset=utf-8 21.6726ms
2025-07-11 01:45:41.060 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_vs/browserLink - null null
2025-07-11 01:45:41.101 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_vs/browserLink - 200 null text/javascript; charset=UTF-8 40.5288ms
2025-07-11 01:45:41.129 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - null null
2025-07-11 01:45:41.165 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 36.1153ms
2025-07-11 01:46:37.915 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 01:46:38.132 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 01:46:38.134 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 01:47:58.120 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 01:47:58.122 +03:00 [INF] Hosting environment: Development
2025-07-11 01:47:58.123 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 01:48:00.302 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - null null
2025-07-11 01:53:52.500 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 01:53:52.742 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 01:53:52.745 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 01:53:52.791 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 01:53:52.792 +03:00 [INF] Hosting environment: Development
2025-07-11 01:53:52.795 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 01:53:57.188 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - null null
2025-07-11 01:53:57.188 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_vs/browserLink - null null
2025-07-11 01:53:57.235 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - 200 16506 application/javascript; charset=utf-8 50.5421ms
2025-07-11 01:53:57.267 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_vs/browserLink - 200 null text/javascript; charset=UTF-8 84.1413ms
2025-07-11 01:53:57.300 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - null null
2025-07-11 01:53:57.358 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: An item with the same key has already been added. Key: v1
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenOptionsExtensions.SwaggerDoc(SwaggerGenOptions swaggerGenOptions, String name, OpenApiInfo info)
   at NZWalks.API.Configurations.SwaggerOptionsConfiguration.Configure(SwaggerGenOptions options) in D:\Projects (.NET)\NZWalks\NZWalksAPI\Configurations\SwaggerOptionsConfiguration.cs:line 26
   at NZWalks.API.Configurations.SwaggerOptionsConfiguration.Configure(String name, SwaggerGenOptions options) in D:\Projects (.NET)\NZWalks\NZWalksAPI\Configurations\SwaggerOptionsConfiguration.cs:line 19
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Swashbuckle.AspNetCore.SwaggerGen.ConfigureSwaggerGeneratorOptions..ctor(IOptions`1 swaggerGenOptionsAccessor, IServiceProvider serviceProvider, IWebHostEnvironment hostingEnv)
   at InvokeStub_ConfigureSwaggerGeneratorOptions..ctor(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_3(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_1(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method1(Closure, Object, HttpContext, IServiceProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-07-11 01:53:57.369 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - 500 null text/plain; charset=utf-8 69.531ms
2025-07-11 01:54:57.978 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 01:54:58.191 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 01:54:58.193 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 01:54:58.251 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 01:54:58.253 +03:00 [INF] Hosting environment: Development
2025-07-11 01:54:58.254 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 01:55:10.050 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - null null
2025-07-11 01:55:10.050 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_vs/browserLink - null null
2025-07-11 01:55:10.088 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - 200 16506 application/javascript; charset=utf-8 41.142ms
2025-07-11 01:55:10.100 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_vs/browserLink - 200 null text/javascript; charset=UTF-8 53.9024ms
2025-07-11 01:55:10.206 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - null null
2025-07-11 01:55:10.242 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 35.4894ms
2025-07-11 01:55:55.524 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 01:55:55.736 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 01:55:55.737 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 01:55:55.791 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 01:55:55.792 +03:00 [INF] Hosting environment: Development
2025-07-11 01:55:55.794 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 01:55:56.064 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - null null
2025-07-11 01:55:56.064 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_vs/browserLink - null null
2025-07-11 01:55:56.092 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - 200 16506 application/javascript; charset=utf-8 31.6853ms
2025-07-11 01:55:56.116 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_vs/browserLink - 200 null text/javascript; charset=UTF-8 56.2938ms
2025-07-11 01:55:56.156 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - null null
2025-07-11 01:55:56.191 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 35.8544ms
2025-07-11 01:56:52.503 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 01:56:52.728 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 01:56:52.732 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 01:56:52.778 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 01:56:52.780 +03:00 [INF] Hosting environment: Development
2025-07-11 01:56:52.782 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 01:56:58.070 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_vs/browserLink - null null
2025-07-11 01:56:58.070 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - null null
2025-07-11 01:56:58.107 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - 200 16506 application/javascript; charset=utf-8 37.508ms
2025-07-11 01:56:58.123 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_vs/browserLink - 200 null text/javascript; charset=UTF-8 56.9355ms
2025-07-11 01:56:58.168 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - null null
2025-07-11 01:56:58.223 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: An item with the same key has already been added. Key: v1
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenOptionsExtensions.SwaggerDoc(SwaggerGenOptions swaggerGenOptions, String name, OpenApiInfo info)
   at NZWalks.API.Configurations.SwaggerOptionsConfiguration.Configure(SwaggerGenOptions options) in D:\Projects (.NET)\NZWalks\NZWalksAPI\Configurations\SwaggerOptionsConfiguration.cs:line 22
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Swashbuckle.AspNetCore.SwaggerGen.ConfigureSwaggerGeneratorOptions..ctor(IOptions`1 swaggerGenOptionsAccessor, IServiceProvider serviceProvider, IWebHostEnvironment hostingEnv)
   at InvokeStub_ConfigureSwaggerGeneratorOptions..ctor(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_3(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_1(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method1(Closure, Object, HttpContext, IServiceProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-07-11 01:56:58.239 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - 500 null text/plain; charset=utf-8 70.7374ms
2025-07-11 02:03:40.589 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 02:03:40.787 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 02:03:40.789 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 02:03:40.826 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 02:03:40.829 +03:00 [INF] Hosting environment: Development
2025-07-11 02:03:40.832 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 02:03:43.347 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_vs/browserLink - null null
2025-07-11 02:03:43.347 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - null null
2025-07-11 02:03:43.378 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - 200 16506 application/javascript; charset=utf-8 33.8234ms
2025-07-11 02:03:43.391 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_vs/browserLink - 200 null text/javascript; charset=UTF-8 47.3809ms
2025-07-11 02:03:43.443 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - null null
2025-07-11 02:03:43.483 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 40.1192ms
2025-07-11 02:05:09.955 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 02:05:10.126 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 02:05:10.131 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 02:05:10.165 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 02:05:10.167 +03:00 [INF] Hosting environment: Development
2025-07-11 02:05:10.168 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 02:05:19.135 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - null null
2025-07-11 02:05:19.135 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_vs/browserLink - null null
2025-07-11 02:05:19.176 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - 200 16506 application/javascript; charset=utf-8 44.7027ms
2025-07-11 02:05:19.189 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_vs/browserLink - 200 null text/javascript; charset=UTF-8 58.2141ms
2025-07-11 02:05:19.422 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - null null
2025-07-11 02:05:19.460 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 38.303ms
2025-07-11 02:05:48.487 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 02:05:48.695 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 02:05:48.698 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 02:05:48.735 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 02:05:48.736 +03:00 [INF] Hosting environment: Development
2025-07-11 02:05:48.739 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 02:05:59.201 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_vs/browserLink - null null
2025-07-11 02:05:59.201 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - null null
2025-07-11 02:05:59.299 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - 200 16506 application/javascript; charset=utf-8 101.7089ms
2025-07-11 02:05:59.314 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_vs/browserLink - 200 null text/javascript; charset=UTF-8 116.8857ms
2025-07-11 02:05:59.441 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - null null
2025-07-11 02:05:59.480 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 39.2363ms
2025-07-11 02:07:03.565 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 02:07:03.731 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 02:07:03.734 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 02:07:03.781 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 02:07:03.783 +03:00 [INF] Hosting environment: Development
2025-07-11 02:07:03.784 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 02:07:09.597 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - null null
2025-07-11 02:07:09.618 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - 200 16506 application/javascript; charset=utf-8 24.1535ms
2025-07-11 02:07:09.752 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_vs/browserLink - null null
2025-07-11 02:07:09.804 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_vs/browserLink - 200 null text/javascript; charset=UTF-8 51.9903ms
2025-07-11 02:07:09.831 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - null null
2025-07-11 02:07:09.870 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 39.1084ms
2025-07-11 02:07:22.662 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - null null
2025-07-11 02:07:22.662 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_vs/browserLink - null null
2025-07-11 02:07:22.671 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - 200 16506 application/javascript; charset=utf-8 9.2403ms
2025-07-11 02:07:22.683 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_vs/browserLink - 200 null text/javascript; charset=UTF-8 20.6166ms
2025-07-11 02:07:22.805 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - null null
2025-07-11 02:07:22.819 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 13.6923ms
2025-07-11 02:08:05.679 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 02:08:05.877 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 02:08:05.881 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 02:08:06.023 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 02:08:06.026 +03:00 [INF] Hosting environment: Development
2025-07-11 02:08:06.026 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 02:08:09.124 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_vs/browserLink - null null
2025-07-11 02:08:09.124 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - null null
2025-07-11 02:08:09.160 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - 200 16506 application/javascript; charset=utf-8 38.6304ms
2025-07-11 02:08:09.172 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_vs/browserLink - 200 null text/javascript; charset=UTF-8 51.0074ms
2025-07-11 02:08:09.317 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - null null
2025-07-11 02:08:09.354 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 36.7084ms
2025-07-11 02:13:16.662 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 02:13:16.892 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 02:13:16.895 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 02:13:16.932 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 02:13:16.934 +03:00 [INF] Hosting environment: Development
2025-07-11 02:13:16.936 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 02:13:20.866 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_vs/browserLink - null null
2025-07-11 02:13:20.866 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - null null
2025-07-11 02:13:20.905 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - 200 16506 application/javascript; charset=utf-8 42.2897ms
2025-07-11 02:13:20.915 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_vs/browserLink - 200 null text/javascript; charset=UTF-8 52.8337ms
2025-07-11 02:13:20.974 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - null null
2025-07-11 02:13:21.027 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: An item with the same key has already been added. Key: v1
   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at System.Collections.Generic.Dictionary`2.Add(TKey key, TValue value)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenOptionsExtensions.SwaggerDoc(SwaggerGenOptions swaggerGenOptions, String name, OpenApiInfo info)
   at NZWalks.API.Configurations.SwaggerOptionsConfiguration.Configure(SwaggerGenOptions options) in D:\Projects (.NET)\NZWalks\NZWalksAPI\Configurations\SwaggerOptionsConfiguration.cs:line 26
   at NZWalks.API.Configurations.SwaggerOptionsConfiguration.Configure(String name, SwaggerGenOptions options) in D:\Projects (.NET)\NZWalks\NZWalksAPI\Configurations\SwaggerOptionsConfiguration.cs:line 19
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
   at Swashbuckle.AspNetCore.SwaggerGen.ConfigureSwaggerGeneratorOptions..ctor(IOptions`1 swaggerGenOptionsAccessor, IServiceProvider serviceProvider, IWebHostEnvironment hostingEnv)
   at InvokeStub_ConfigureSwaggerGeneratorOptions..ctor(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitIEnumerable(IEnumerableCallSite enumerableCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_3(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions.<>c.<AddSwaggerGen>b__0_1(IServiceProvider s)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method1(Closure, Object, HttpContext, IServiceProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-07-11 02:13:21.041 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - 500 null text/plain; charset=utf-8 66.757ms
2025-07-11 02:13:48.749 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 02:13:48.957 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 02:13:48.958 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 02:13:49.006 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 02:13:49.008 +03:00 [INF] Hosting environment: Development
2025-07-11 02:13:49.009 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 02:13:54.872 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - null null
2025-07-11 02:13:54.872 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_vs/browserLink - null null
2025-07-11 02:13:54.897 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - 200 16506 application/javascript; charset=utf-8 30.4343ms
2025-07-11 02:13:54.925 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_vs/browserLink - 200 null text/javascript; charset=UTF-8 59.4087ms
2025-07-11 02:13:54.971 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - null null
2025-07-11 02:13:55.006 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 35.6708ms
2025-07-11 02:14:16.916 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7123/api/v1/Walks - application/json 186
2025-07-11 02:14:17.212 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 11:14:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-11 02:14:17.253 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 11:14:17 PM'.
2025-07-11 02:14:17.259 +03:00 [INF] Executing endpoint 'NZWalks.API.Controllers.V1.WalksController.GetAll (NZWalks.API)'
2025-07-11 02:14:17.277 +03:00 [INF] Route matched with {action = "GetAll", controller = "Walks"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll(NZWalks.API.Models.Domain.WalkQueryParameters) on controller NZWalks.API.Controllers.V1.WalksController (NZWalks.API).
2025-07-11 02:14:18.112 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-07-11 02:14:18.116 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-07-11 02:14:18.497 +03:00 [INF] Executed DbCommand (51ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [w0].[Id], [w0].[Description], [w0].[DifficultyId], [w0].[LengthInKm], [w0].[Name], [w0].[RegionId], [w0].[WalkImageUrl], [d].[Id], [d].[Name], [r].[Id], [r].[Code], [r].[Name], [r].[RegionImageUrl]
FROM (
    SELECT [w].[Id], [w].[Description], [w].[DifficultyId], [w].[LengthInKm], [w].[Name], [w].[RegionId], [w].[WalkImageUrl]
    FROM [Walks] AS [w]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [w0]
INNER JOIN [Difficulties] AS [d] ON [w0].[DifficultyId] = [d].[Id]
INNER JOIN [Regions] AS [r] ON [w0].[RegionId] = [r].[Id]
2025-07-11 02:14:18.587 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[NZWalks.API.Models.DTOs.WalkDto, NZWalks.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-11 02:14:18.608 +03:00 [INF] Executed action NZWalks.API.Controllers.V1.WalksController.GetAll (NZWalks.API) in 1321.4382ms
2025-07-11 02:14:18.613 +03:00 [INF] Executed endpoint 'NZWalks.API.Controllers.V1.WalksController.GetAll (NZWalks.API)'
2025-07-11 02:14:18.629 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7123/api/v1/Walks - 200 null application/json; charset=utf-8 1712.8338ms
2025-07-11 02:14:23.587 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7123/api/v2/Walks - application/json 186
2025-07-11 02:14:23.639 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 11:14:23 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-11 02:14:23.643 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 11:14:23 PM'.
2025-07-11 02:14:23.644 +03:00 [INF] Executing endpoint 'NZWalks.API.Controllers.V1.WalksV2Controller.GetAll (NZWalks.API)'
2025-07-11 02:14:23.648 +03:00 [INF] Route matched with {action = "GetAll", controller = "WalksV"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll(NZWalks.API.Models.Domain.WalkQueryParameters) on controller NZWalks.API.Controllers.V1.WalksV2Controller (NZWalks.API).
2025-07-11 02:14:23.693 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [w0].[Id], [w0].[Description], [w0].[DifficultyId], [w0].[LengthInKm], [w0].[Name], [w0].[RegionId], [w0].[WalkImageUrl], [d].[Id], [d].[Name], [r].[Id], [r].[Code], [r].[Name], [r].[RegionImageUrl]
FROM (
    SELECT [w].[Id], [w].[Description], [w].[DifficultyId], [w].[LengthInKm], [w].[Name], [w].[RegionId], [w].[WalkImageUrl]
    FROM [Walks] AS [w]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [w0]
INNER JOIN [Difficulties] AS [d] ON [w0].[DifficultyId] = [d].[Id]
INNER JOIN [Regions] AS [r] ON [w0].[RegionId] = [r].[Id]
2025-07-11 02:14:23.699 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[NZWalks.API.Models.DTOs.WalkDto, NZWalks.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-11 02:14:23.702 +03:00 [INF] Executed action NZWalks.API.Controllers.V1.WalksV2Controller.GetAll (NZWalks.API) in 52.3646ms
2025-07-11 02:14:23.703 +03:00 [INF] Executed endpoint 'NZWalks.API.Controllers.V1.WalksV2Controller.GetAll (NZWalks.API)'
2025-07-11 02:14:23.704 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7123/api/v2/Walks - 200 null application/json; charset=utf-8 116.4696ms
2025-07-11 02:14:28.436 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7123/api/v3/Walks - application/json 186
2025-07-11 02:14:28.445 +03:00 [INF] Multiple candidate actions were found, but none matched the requested service API version '3'. Candidate actions: NZWalks.API.Controllers.V1.WalksController.GetAll (NZWalks.API)
NZWalks.API.Controllers.V1.WalksV2Controller.GetAll (NZWalks.API)
2025-07-11 02:14:28.483 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 11:14:28 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-11 02:14:28.486 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/9/2025 4:28:15 PM', Current time (UTC): '7/10/2025 11:14:28 PM'.
2025-07-11 02:14:28.487 +03:00 [INF] Executing endpoint 'Microsoft.AspNetCore.Http.Endpoint'
2025-07-11 02:14:28.489 +03:00 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType0`1[[<>f__AnonymousType1`3[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], Microsoft.AspNetCore.Mvc.Versioning, Version=5.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]], Microsoft.AspNetCore.Mvc.Versioning, Version=5.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]'.
2025-07-11 02:14:28.493 +03:00 [INF] Executed endpoint 'Microsoft.AspNetCore.Http.Endpoint'
2025-07-11 02:14:28.494 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7123/api/v3/Walks - 400 null application/json; charset=utf-8 57.2647ms
2025-07-11 02:21:56.282 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 02:21:56.500 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 02:21:56.503 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 02:21:56.538 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 02:21:56.540 +03:00 [INF] Hosting environment: Development
2025-07-11 02:21:56.543 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 02:22:04.084 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - null null
2025-07-11 02:22:04.084 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_vs/browserLink - null null
2025-07-11 02:22:04.133 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - 200 16506 application/javascript; charset=utf-8 51.3061ms
2025-07-11 02:22:04.160 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_vs/browserLink - 200 null text/javascript; charset=UTF-8 79.1961ms
2025-07-11 02:22:04.211 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - null null
2025-07-11 02:22:04.250 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 38.4683ms
2025-07-11 02:26:28.218 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 02:26:28.424 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 02:26:28.427 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 02:26:28.580 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 02:26:28.582 +03:00 [INF] Hosting environment: Development
2025-07-11 02:26:28.584 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 02:26:33.475 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_vs/browserLink - null null
2025-07-11 02:26:33.475 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - null null
2025-07-11 02:26:33.515 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - 200 16506 application/javascript; charset=utf-8 44.174ms
2025-07-11 02:26:33.531 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_vs/browserLink - 200 null text/javascript; charset=UTF-8 61.043ms
2025-07-11 02:26:33.577 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - null null
2025-07-11 02:26:33.616 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 38.6657ms
2025-07-11 02:29:52.220 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 02:29:52.409 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 02:29:52.410 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 02:29:52.450 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 02:29:52.453 +03:00 [INF] Hosting environment: Development
2025-07-11 02:29:52.455 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 02:30:02.369 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_vs/browserLink - null null
2025-07-11 02:30:02.369 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - null null
2025-07-11 02:30:02.443 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - 200 16506 application/javascript; charset=utf-8 76.1664ms
2025-07-11 02:30:02.475 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_vs/browserLink - 200 null text/javascript; charset=UTF-8 109.7555ms
2025-07-11 02:30:02.678 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - null null
2025-07-11 02:30:02.724 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 45.5842ms
2025-07-11 02:33:13.418 +03:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-11 02:33:13.608 +03:00 [INF] Now listening on: https://localhost:7123
2025-07-11 02:33:13.612 +03:00 [INF] Now listening on: http://localhost:5026
2025-07-11 02:33:13.727 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-11 02:33:13.730 +03:00 [INF] Hosting environment: Development
2025-07-11 02:33:13.731 +03:00 [INF] Content root path: D:\Projects (.NET)\NZWalks\NZWalksAPI
2025-07-11 02:33:18.637 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - null null
2025-07-11 02:33:18.637 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/_vs/browserLink - null null
2025-07-11 02:33:18.675 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_framework/aspnetcore-browser-refresh.js - 200 16506 application/javascript; charset=utf-8 40.4082ms
2025-07-11 02:33:18.687 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/_vs/browserLink - 200 null text/javascript; charset=UTF-8 53.5591ms
2025-07-11 02:33:18.715 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - null null
2025-07-11 02:33:18.751 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7123/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 35.7513ms
