name: dockercompose10577342304238753269
services:
  nzwalks.api:
    build:
      context: D:\Projects (.NET)\NZWalks
      dockerfile: NZWalksAPI/Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
        LAUNCHING_FROM_VS: "true"
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: NZWalks.API
      target: base
    container_name: nzwalks
    depends_on:
      redis-cache:
        condition: service_started
        required: true
      sql_server:
        condition: service_started
        required: true
    entrypoint:
      - dotnet
      - --roll-forward
      - Major
      - /VSTools/DistrolessHelper/DistrolessHelper.dll
      - --wait
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: http://+:8080;=https://+:8081;
      ConnectionStrings__NZWalksAuthConnectionString: Server=sql_server;Database=NZWalksAuthDb;User Id=sa;Password=01152151908.Amar;TrustServerCertificate=True
      ConnectionStrings__NZWalksConnectionString: Server=sql_server;Database=NZWalksDb;User Id=sa;Password=01152151908.Amar;TrustServerCertificate=True
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: /.nuget/fallbackpackages
    image: nzwalksapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages --additionalProbingPath /.nuget/fallbackpackages  "/app/bin/Debug/net9.0/NZWalks.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: dotnet --roll-forward Major /VSTools/DistrolessHelper/DistrolessHelper.dll --stop dotnet
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      nzwalks: null
    ports:
      - mode: ingress
        target: 8080
        published: "8080"
        protocol: tcp
      - mode: ingress
        target: 8081
        published: "8081"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\User\AppData\Roaming\Microsoft\UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\User\AppData\Roaming\Microsoft\UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\User\AppData\Roaming\ASP.NET\Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\User\AppData\Roaming\ASP.NET\Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: D:\Projects (.NET)\NZWalks\NZWalksAPI
        target: /app
        bind:
          create_host_path: true
      - type: bind
        source: D:\Projects (.NET)\NZWalks
        target: /src
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\User\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\User\.nuget\packages
        target: /.nuget/packages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages
        target: /.nuget/fallbackpackages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\linux-x64\net6.0
        target: /VSTools
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
  redis-cache:
    container_name: redis
    image: redis:latest
    networks:
      nzwalks: null
    ports:
      - mode: ingress
        target: 6379
        published: "6379"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: redis_data
        target: /data
        volume: {}
  sql_server:
    container_name: sqlserver
    environment:
      ACCEPT_EULA: '"Y"'
      MSSQL_PID: Developer
      SA_PASSWORD: '"01152151908.Amar"'
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      nzwalks: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
    volumes:
      - type: volume
        source: sql_data
        target: /var/opt/mssql
        volume: {}
networks:
  nzwalks:
    name: dockercompose10577342304238753269_nzwalks
    driver: bridge
volumes:
  redis_data:
    name: dockercompose10577342304238753269_redis_data
  sql_data:
    name: dockercompose10577342304238753269_sql_data